//*============================================================================
//CamBtn.cpp
//*============================================================================

//=============================================================================
//include
//=============================================================================
#include "CamBar.h"
#include "CamBtn.h"


//============================================================================
//コンストラクタ
//============================================================================
//[input]
//	pName:データ名
//	vPos:表示位置
//===========================================================================
CCamBar::CCamBar( const char *pName, Math::Vector2D vPos ) 
 :CSprite( pName, vPos )
{
}

//============================================================================
//デストラクタ
//============================================================================
CCamBar::~CCamBar()
{
}

//=============================================================================
//移動補正
//=============================================================================
//[input]
//	vPos:位置
//=============================================================================
void CCamBar::MoveAdjust( Math::Vector2D vPos )
{
	Sint32 Angle = Math::ATan2( vPos.x, vPos.y );
	
	const float fRadius = 60.0f;
	
	float fLength = vPos.Length();
	
	if( fLength > fRadius )
	{
		m_vPos.x = m_vInitPos.x + Math::Cos( Angle ) * fRadius;
		m_vPos.y = m_vInitPos.y + Math::Sin( Angle ) * fRadius;
	}
	
	else
	{
		m_vPos.x = m_vInitPos.x + Math::Cos( Angle ) * vPos.Length() - 2.0f;
		m_vPos.y = m_vInitPos.y + Math::Sin( Angle ) * vPos.Length() - 2.0f;
	}
	
}

