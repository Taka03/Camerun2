//*============================================================================
//SoundManager.cpp
//*============================================================================

//=============================================================================
//include
//=============================================================================
#include "SoundManager.h"
#include "ResourceManager.h"

//=============================================================================
//コンストラクタ
//=============================================================================
CSoundManager::CSoundManager(void)
{
	memset( m_pSoundObj, NULL, SND_MAX );
}

//=============================================================================
//デストラクタ
//=============================================================================
CSoundManager::~CSoundManager(void)
{
	//for( int i = 0;i < SND_MAX;++i )
	//{	
	//	SAFE_DELETE( m_pSoundObj[i] );
	//}
}

//=============================================================================
//リソースの追加
//=============================================================================
//[input]
//
//=============================================================================
void CSoundManager::PushResource( CResourceManager *pResMgr )
{
	//サウンドデータ名
	const char *pSndData[] =
	{
		"Select",
		"Decide",
		"New",
		"Message",
		"Prohibit",
		"ShowEnemy",
		"PlayerMove",
		"GetDown",
		"Bite",
		"Boost",
		"Shutter",
		"Train",
		"Bird",
		"Mouse",
		"RizardMove",
		"MissionClear",
		"MissionFail",
		"Change",
		"CalcScore",
		"Exit",
	};
	
	for( int i = 0;i < SND_MAX;++i )
	{
		m_pSoundObj[i] = dynamic_cast< CSoundEffect * >
						( pResMgr->FindSoundObj( pSndData[i] ) );
	}
}

//=============================================================================
//音の再生
//=============================================================================
//[input]
//	Type:再生する音
//=============================================================================
void CSoundManager::Play( CSoundManager::eSoundType Type )
{
	m_pSoundObj[Type]->GetSEDevice()->Play( 0 );
} 

//=============================================================================
//音の停止
//=============================================================================
//[input]
//	Type:停止する音
//=============================================================================
void CSoundManager::Stop( CSoundManager::eSoundType Type )
{
	m_pSoundObj[Type]->GetSEDevice()->Stop( 0 );
}

//=============================================================================
//音の停止
//=============================================================================
//[input]
//	Type:停止する音
//=============================================================================
void CSoundManager::SetVolume( CSoundManager::eSoundType Type, float fVolume )
{
	m_pSoundObj[Type]->GetSEDevice()->SetVolume( 0, fVolume );
}

//=============================================================================
//音の停止
//=============================================================================
//[input]
//	Type:停止する音
//=============================================================================
void CSoundManager::SetPan( CSoundManager::eSoundType Type, float fPan )
{
	m_pSoundObj[Type]->GetSEDevice()->SetPan( 0, fPan );
}

